
wget -O /usr/share/keyrings/githubcli-archive-keyring.gpg https://cli.github.com/packages/githubcli-archive-keyring.gpg

echo "deb [arch=amd64 signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" > /etc/apt/sources.list.d/github-cli.list
apt-get update
apt-get install gh

git --help
git push --help

 = = = = = = = = = = = = = = = = = = = = = = = = = = = =

https://github.com/progit/progit2/blob/main/book/03-git-branching/sections/images/commits-and-parents.png

apt-get install dh-autoreconf libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev asciidoc install-info

download source from https://github.com/git/git/tags

$ tar -zxf git-2.8.0.tar.gz
$ cd git-2.8.0
$ make configure
$ ./configure --prefix=/usr
$ make all doc info
$ sudo make install install-doc install-html install-info

 = = = = = = = = = = = = = = = = = = = = = = = = = = = =

git clone https://github.com/cli/cli.git gh-cli
cd gh-cli
make install prefix=/path/to/gh

 = = = = = = = = = = = = = = = = = = = = = = = = = = = =

book
https://github.com/progit/progit2

 = = = = = = = = = = = = = = = = = = = = = = = = = = = =

git config --global user.name "tarcisomesquita"
git config --global user.email "tarcisomesquita@gmail.com"
git config --global init.defaultBranch main
git config --global core.editor nano

git config --list --show-origin

 = = = = = = = = = = = = = = = = = = = = = = = = = = = =

cd /home/user/my_project
git init

 = = = = = = = = = = = = = = = = = = = = = = = = = = = =

git clone https://github.com/tarcisomesquita/linux.git

git switch main

git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

 = = = = = = = = = = = = = = = = = = = = = = = = = = = =

git add .
git commit -m "saving changes"
git remote add origin https://github.com/tarcisomesquita/linux.git
git push -u origin main

gh auth login

git remote -v
git remote remove origin
git remote set-url origin https://github.com/tarcisomesquita/linux.git

https://docs.github.com/en/repositories/creating-and-managing-repositories/quickstart-for-repositories?tool=cli

gh auth login
gh auth login --git-protocol https --web
git push origin main


git status

git add . &&  git commit -m "saving changes" &&  git push --set-upstream origin master

git ls-remote https://github.com/tarcisomesquita/linux.git

git push REMOTE-NAME BRANCH-NAME
git push origin main

 = = = = = = = = = = = = = = = = = = = = = = = = = = = =

https://raw.githubusercontent.com/progit/progit2/main/images/snapshots.svg

you have the entire history of the project right there on your local disk
Git uses the checksum SHA-1 hash

states that your files can reside in: modified, staged, and committed

git log --pretty=oneline
git log -p -2 PROGRAMAS/git.txt
git log --stat
git log --oneline --decorate

git log --pretty=oneline
ab1afef80fac8e34258ff41fc1b867c702daa24b Modify repo.rb a bit
484a59275031909e19aadb7c92262719cfcdf19a Create repo.rb
1a410efbd13591db07496601ebc7a059dd55cfe9 Third commit
cac0cab538b970a37ea1e769cbbde608743bc96d Second commit
fdf4fc3344e67ab068f836878b6c4951e3b15f3d First commit
Now, move the master branch back to the middle commit:
$ git reset --hard 1a410efbd13591db07496601ebc7a059dd55cfe9

 = = = = = = = = = = = = = = = = = = = = = = = = = = = =

example .gitignore file:

# ignore all .a files
*.a

# but do track lib.a, even though you're ignoring .a files above
!lib.a

# only ignore the TODO file in the current directory, not subdir/TODO
/TODO

# ignore all files in any directory named build
build/

# ignore doc/notes.txt, but not doc/server/arch.txt
doc/*.txt

# ignore all .pdf files in the doc/ directory and any of its subdirectories
doc/**/*.pdf

 = = = = = = = = = = = = = = = = = = = = = = = = = = = =

https://github.com/progit/progit2/blob/main/book/02-git-basics/sections/recording-changes.asc
https://github.com/progit/progit2/blob/main/book/02-git-basics/sections/remotes.asc
https://cli.github.com/

git gc
ls -lh .git/objects/pack/
$ git count-objects -v
count: 7
size: 32
in-pack: 17
packs: 1
size-pack: 4868
prune-packable: 0
garbage: 0
size-garbage: 0
The size-pack entry is the size of your packfiles in kilobytes


echo 'test content' | git hash-object -w --stdin
d670460b4b4aece5915caf5c68d12f560a9fe3e4


find .git/objects -type f
.git/objects/d6/70460b4b4aece5915caf5c68d12f560a9fe3e4

git cat-file -p d670460b4b4aece5915caf5c68d12f560a9fe3e4

git cat-file -p master^{tree}

https://github.com/progit/progit2/blob/main/book/10-git-internals/sections/objects.asc


